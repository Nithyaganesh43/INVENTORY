{
  "info": {
    "name": "Inventory System API",
    "description": "Complete API collection for the Inventory Management System with role-based access control",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Admin Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.token) {",
                  "        pm.environment.set('admin_token', response.token);",
                  "        console.log('Admin token saved:', response.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{admin_username}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.token) {",
                  "        pm.environment.set('user_token', response.token);",
                  "        console.log('User token saved:', response.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{test_user_username}}\",\n  \"password\": \"{{test_user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Public Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/product",
              "host": ["{{base_url}}"],
              "path": ["product"]
            }
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/product/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["product", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/product/categories",
              "host": ["{{base_url}}"],
              "path": ["product", "categories"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin - Branch Management",
      "item": [
        {
          "name": "Create Branch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.branch) {",
                  "        pm.environment.set('branch_id', response.branch._id);",
                  "        console.log('Branch ID saved:', response.branch._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Branch\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/branches",
              "host": ["{{base_url}}"],
              "path": ["admin", "branches"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Branches",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/branches",
              "host": ["{{base_url}}"],
              "path": ["admin", "branches"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin - User Management",
      "item": [
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.user) {",
                  "        pm.environment.set('user_id', response.user._id);",
                  "        console.log('User ID saved:', response.user._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"username\": \"john.doe\",\n  \"password\": \"password123\",\n  \"branch\": \"{{branch_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/users",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin - Category Management",
      "item": [
        {
          "name": "Create Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.category) {",
                  "        pm.environment.set('category_id', response.category._id);",
                  "        console.log('Category ID saved:', response.category._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electronics\",\n  \"description\": \"Electronic devices and accessories\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/categories",
              "host": ["{{base_url}}"],
              "path": ["admin", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/categories",
              "host": ["{{base_url}}"],
              "path": ["admin", "categories"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin - Product Management",
      "item": [
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.product) {",
                  "        pm.environment.set('product_id', response.product._id);",
                  "        console.log('Product ID saved:', response.product._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Laptop\",\n  \"description\": \"High-performance laptop\",\n  \"price\": 999.99,\n  \"category\": \"{{category_id}}\",\n  \"stock\": 50,\n  \"branch\": \"{{branch_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/products",
              "host": ["{{base_url}}"],
              "path": ["admin", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/products",
              "host": ["{{base_url}}"],
              "path": ["admin", "products"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin - Order Management",
      "item": [
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/orders",
              "host": ["{{base_url}}"],
              "path": ["admin", "orders"]
            }
          },
          "response": []
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["admin", "orders", "{{order_id}}", "status"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User - Products",
      "item": [
        {
          "name": "Get Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user/products",
              "host": ["{{base_url}}"],
              "path": ["user", "products"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User - Orders",
      "item": [
        {
          "name": "Place Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.order) {",
                  "        pm.environment.set('order_id', response.order._id);",
                  "        console.log('Order ID saved:', response.order._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"product\": \"{{product_id}}\",\n      \"quantity\": 2\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/user/orders",
              "host": ["{{base_url}}"],
              "path": ["user", "orders"]
            }
          },
          "response": []
        },
        {
          "name": "Get My Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user/orders",
              "host": ["{{base_url}}"],
              "path": ["user", "orders"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Request URL:', pm.request.url.toString());",
          "console.log('Request Method:', pm.request.method);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "console.log('Response Status:', pm.response.status);",
          "console.log('Response Time:', pm.response.responseTime + 'ms');",
          "",
          "// Basic response validation",
          "pm.test('Status code is valid', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 401, 403, 404, 500]);",
          "});",
          "",
          "pm.test('Response has required fields', function () {",
          "    if (pm.response.code === 200 || pm.response.code === 201) {",
          "        const response = pm.response.json();",
          "        pm.expect(response).to.have.property('success');",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://invetorymanagementsystembyisai.onrender.com"
    }
  ]
} 